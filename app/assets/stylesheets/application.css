@import "./actiontext.css";

:root { /* defining root styling */   
    --bg-color: rgba(4, 23, 84, 0.739);
    --font-color: rgb(255, 255, 255);
    --font-family: "Montserrat", sans-serif;
    --font-size-title: 1.2rem;
    --font-size-body: 1.1rem;
    --font-size-detail: 0.9rem;
    --input-field-bg-color: 
}

/* app/assets/stylesheets/application.css */

trix-editor {
    background-color: #f0f0f058; /* Change this to your desired background color */
    padding: 10px; /* Optional: add some padding for better appearance */
    border-radius: 5px; /* Optional: add rounded corners */
  }

  trix-toolbar .trix-button-group button { 
    background-color: white; /* changes the trix editor button colors (default is black and so with current background color they "disappear"*/
  }

* { /* resetting browser default setting */
    box-sizing: border-box; /* keeps the original width and height when adding padding and margin */
    margin: 0; 
    padding: 0;
    text-decoration: none; /* removes the underline of all the hyperlinks */
}

a {
    color: var(--font-color); /* makes sure that any link that is clicked on does not change color afterwards */
}

.highlighted-projects-grid,
.projects-grid {
    display: grid; /* Defining the display as grid */
    grid-template-columns: repeat(4, 1fr); /* Declaring how many columns I need and making sure they're equal size */ 
    gap: 1.5rem; /* Adding gap between grid cells */ 
    margin: 1.5rem; /* Adding margin (spacing on the outside of the whole grid) */ 
    border: solid red;
}

.recent-projects-grid,
.due-soon-projects-grid,
.past-due-projects-grid {
    display: grid; /* Defining the display as grid */
    grid-template-columns: 1fr; /* Declaring that the grid will have only 1 column */
    grid-template-rows: 1fr; /* Declaring that the grid will have only 1 row */
    gap: 1.5rem;
    margin: 1.5rem; /* Adding margin (spacing on the outside of the whole grid) */
}

.highlighted-projects-grid .project-card {
    display: grid;
    grid-area: 1 / 1; /* Defines the area where project-cards will be placed within the grid. In this case, starts in the 1st row and column */
    gap: 1.5rem;
    margin: 1.5rem; /* Adding margin (spacing on the outside of the project-card) */
}

.highlighted-projects-grid .project-card:nth-child(1) {
    transform: rotate(-2deg); /* Rotate the 1st card slightly counter-clockwise */
}

.highlighted-projects-grid .project-card:nth-child(2) {
    transform: rotate(2deg); /* Rotate the 2nd card slightly clockwise */
}

.highlighted-projects-grid .project-card:nth-child(3) {
    transform: rotate(-4deg); /* Rotate the 3rd card slightly counter-clockwise */ 
}

.highlighted-projects-grid .project-card:hover {
    transform: scale(1.05); /* Slight zoom on hover */ 
}

.project-card {
    border: solid; /* Creating a border for each individual project card */
    height: 200px; /* Defining a height for each project card */
    background-color: black;
}

.project-card-name {
    text-align: center;
}

.modal {
    position: fixed;
    z-index: 1;
    padding: 2em;
    
    /* Centering */
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    overflow: auto;
    background-color: rgb(0,0,0);
    border-radius: 5px;
    /* Add the drop shadow */
    box-shadow: 0 0 10px 0 rgba(0,0,0,0.2), 0 5px 10px 0 rgba(0,0,0,0.19);
}

.cancel-button {
    background-color: #1530ff;
    font-size: 12px;
    color: white;
    padding: 4px 8px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    float: right;
    text-decoration: none;
}
.cancel-button:hover {
    background-color: #2640fe;
}

body {
    background: linear-gradient(180deg, #01032d 0%, #232433 100%) fixed; /* background-color: var(--bg-color); */
    color: var(--font-color);
    font-family: var(--font-family);
    padding: 1%; /* adding padding so that .navbar items don't get too close to the edges */
}

.navbar ul { /* targetting only ul's inside the navbar so that rich text formatting works */
    border: solid;
    display: flex; /* displaying ul's direct children (li's) horizontally */
    flex-wrap: wrap; /* allows li's to wrap on top of each other when there isn't enough space */
    justify-content: center; /* aligns li's in the center of ul container, which is specifically important in smaller viewports*/
    align-items: center; /* aligning ul's in the center */

    @media all and (max-width: 480px) { 
        margin-top: 1rem; /* adding a bit of top margin to get .nav-items further away from logo in smaller viewports */
    }
}

.navbar li { /* targetting only li's inside the navbar so that rich text formatting works */
    padding: 10px; /* increases background area without moving other li's when hovering */
    list-style: none; /* removes bullet from li's */
    font-size: var(--font-size-title); 
}

.navbar li:hover { /* targetting only the hover on li's inside the navbar so that hovering does not affect li's from projects */
    background-color: #040b8a; /* changes the li background color whenever the mouse is hovered on it */
    border-radius: 50px;
    border: none;
    cursor: pointer; /* turns the cursor to a pointer whenever it hovers over the button */
    transition: all 0.3s ease 0s; /* how long it takes to transition the pointer type */
    padding: 10px;
}

.navbar {
    border: solid;
    display: flex; /* distributes items (.brand and .nav-items) horizontaly */
    text-align: center; /* aligns text vertically in the center of container */
    flex-wrap: wrap; /* wraps logo and nav-items on top of each other */
    justify-content: space-between; /* adds space evenly between flex items */
    @media all and (max-width: 480px) { 
        justify-content: center; /* justifying .navbar items in the center of the screen when viewport gets to a max width of 480px */
    }
}

.top-section {
    display: flex;
    flex-direction: column;
    align-items: center; /* aligning items to the center of the screen. it won't make a difference in the desktop viewport, but keeps it centered in smaller viewports */
    text-align: center; /* distributes text horizontally to the center of the screen */      
    padding: 4rem 1rem;
}

.top-section > .title {
    margin: 2rem 0;
    font-size: 3rem;
}

.top-section > .sub-title {
    font-size: var(--font-size-title);
    margin: 1rem 0 0.5rem 0;
    font-size: 1.5rem;
}

.card-deck {
    display: flex; /* distributes items horizontaly */
    justify-content: center; /* distributes flex items to the center of the main axis (in this case, horizontally) */
    gap: 2rem; /* adds gap between .card-deck children */ 
    padding-right: 20%; /* adding padding to the deck to make cards fatter */
    padding-left: 20%; /* adding padding to the deck to make cards fatter */
    flex-wrap: wrap; /* wraps .cards on top of each other */
    margin-bottom: 3rem;
}

.card {
    background-color: var(--bg-color);
    border: solid var(--bg-color);
    border-color: var(--font-color);
    flex: 1; /* grow continar to fill available space from the parent (.card-deck) and distributes children evenly, while allowing shrinking and setting same basis (=width) for all of them */
    border-radius: 10px; /* makes border a bit rounded */
    text-align: center;
    display: flex; 
    flex-direction: column; /* displays .card direct children as columns */
}

.card:hover {
    transform: rotate(10deg) scale(1.1);
    transition: all 0.3s ease 0s;
    cursor: pointer;
}

.card > .title {
    font-size: var(--font-size-title);
    padding: 1rem 1rem;
}

.card > .body {
    font-size: var(--font-size-body);
    padding: 1rem 0.5rem 1rem 0.5rem;
    
}

.mid-section { 
    display: grid; /* applies the grid layout to .mid-section */
    grid-template-columns: repeat(5, 1fr); /* sets the grid with 5 columns, with each element spanning to the column whole width */
    border: solid;
}

.mid-section > .text {
    grid-column-start: 1; /* sets the beginning of the .text <div> at the first column */
    grid-column-end: span 3; /* sets the end of the .text <div> to the 3rd column */
}

.mid-section > .text > .title {
    /* font-size: var(--font-size-title); */
    font-weight: 600;
    padding: 1rem;
}

.mid-section > .text > .body {
    font-weight: 400;
    padding: 0 1rem 1rem 1rem;
}

.mid-section > .image {
    grid-column-end: span 2;
    text-align: center;
}
/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
